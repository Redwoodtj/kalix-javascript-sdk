// Copyright 2019 Lightbend Inc.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "akkaserverless/entity_key.proto";
import "akkaserverless/eventing.proto";
import "akkaserverless/view.proto";
import "google/api/annotations.proto";
import "google/api/http.proto";
import "google/api/httpbody.proto";

package example.users;

message User {
    string user_id = 1 [(.akkaserverless.entity_key) = true];
    repeated string emails = 2;
}

message GetUserRequest {
    string user_id = 1 [(.akkaserverless.entity_key) = true];
}

service Users {
    rpc UpdateUser(User) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/users/{user_id}",
            body: "*",
        };
    }

    rpc GetUser(GetUserRequest) returns (User) {
        option (google.api.http) = {
          get: "/users/{user_id}",
        };
    }
}

message UsersByEmailRequest {
    string email = 1;
}

service UsersByEmail {
    rpc UpdateUser(User) returns (User) {
        option (akkaserverless.eventing) = {
          in: {
            event_log: "users",
          },
        };
        option (akkaserverless.view) = {
          table: "users",
          auto_persist: true,
        };
    }

    rpc GetUsersByEmail(UsersByEmailRequest) returns (stream User) {
        option (akkaserverless.view) = {
          query: "select * from users where emails = :email",
        };
        option (google.api.http) = {
          get: "/users",
        };
    }
}
