// Copyright 2019 Lightbend Inc.

syntax = "proto3";

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/http.proto";
import "google/api/httpbody.proto";

package example.users;

message User {
    string user_id = 1 [(akkaserverless.field).entity_key = true];
    repeated string emails = 2;
}

message GetUserRequest {
    string user_id = 1 [(akkaserverless.field).entity_key = true];
}

service Users {
    rpc UpdateUser(User) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            put: "/users/{user_id}"
            body: "*"
        };
    }

    rpc GetUser(GetUserRequest) returns (User) {
        option (google.api.http) = {
          get: "/users/{user_id}"
        };
    }
}

message UsersByEmailRequest {
    string email = 1;
}

service UsersByEmail {
    rpc UpdateUser(User) returns (User) {
        option (akkaserverless.method).eventing.in = {
          value_entity: "users"
        };
        option (akkaserverless.method).view.update = {
          table: "users"
        };
    }

    rpc GetUsersByEmail(UsersByEmailRequest) returns (stream User) {
        option (akkaserverless.method).view.query = {
          query: "select * from users where emails = :email"
        };
        option (google.api.http) = {
          get: "/users"
        };
    }
}

// Somewhat superficial usecase for views just to show off event transformation
message UserEmailCountState {
  string user_id = 1 [(akkaserverless.field).entity_key = true];
  int32 email_count = 2;
}

message NumberOfEmailsPerUserRequest {
}

service UserEmailCount {
  rpc UpdateUser(User) returns (UserEmailCountState) {
    option (akkaserverless.method).eventing.in = {
      value_entity: "users"
    };
    option (akkaserverless.method).view.update = {
      table: "user_email_count"
      transform_updates: true
    };
  }

  rpc GetNumberOfEmailsPerUser(NumberOfEmailsPerUserRequest) returns (stream UserEmailCountState) {
    option (akkaserverless.method).view.query = {
      query: "select * from user_email_count"
    };
    option (google.api.http) = {
      get: "/user-email-count"
    };
  }
}
